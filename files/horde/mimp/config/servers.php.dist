<?php
/**
 * $Horde: mimp/config/servers.php.dist,v 1.12 2006/02/22 17:16:36 slusarz Exp $
 *
 * This file is where you specify what mail servers people using your
 * installation of MIMP can log in to.
 *
 * If using IMP on the same websever, you can link (i.e.
 * "ln -s ../../imp/config/servers.php .") MIMP's servers.php file to IMP's
 * servers.php file to ease installation.  In this situation, you only have
 * to maintain one file (IMP's servers.php) for both applications. MIMP will
 * ignore extra server configuration located in IMP's configuration.
 *
 * Properties that can be set for each server:
 *
 * name: This is the plaintext, english name that you want displayed
 *       to people if you are using the drop down server list.
 *
 * server: The hostname of the mail server to connect to.
 *
 * protocol: One of the following strings:
 *             + 'imap/notls'
 *             + 'imap/ssl'
 *             + 'imap/tls'
 *             + 'pop3/notls'
 *             + 'pop3/ssl'
 *             + 'pop3/tls'
 *
 *           If using 'pop3/*' you will connect to a POP3 mail server and
 *           not support folders).  If you want folders (and for much
 *           improved performance) it is HIGHLY RECOMMENDED that IMAP should
 *           be used instead.
 *
 *           NOTE: Due to limitations within PHP, MIMP can only support auto-
 *                 detection of namespace parameters with IMAP TLS connections
 *                 (e.g 'imap/tls') if using PHP version 5.1.0 or greater.
 *                 If using a version of PHP less than 5.1.0, the following
 *                 options are available:
 *                 1. RECOMMENDED - If a secure IMAP connection is needed, use
 *                    a direct connection to a SSL enabled IMAP port
 *                    (e.g. 'imap/ssl').
 *                 2. If you absolutely must use TLS, then it is REQUIRED to
 *                    define the 'namespace' parameter (see below).
 *
 *           The ssl and tls options will only work if you've compiled PHP
 *           against a SSL-enabled version of c-client, used the
 *           --with-imap-ssl and --with-openssl flags when compiling PHP,
 *           and you have a mail server server which supports SSL.
 *
 *           ** The test script can help automatically determine the    **
 *           ** correct protocol value to use.  See the 'Testing MIMP'  **
 *           ** section of mimp/docs/INSTALL for instructions on how to **
 *           ** access the test script.                                 **
 *
 *           NOTE - If you are using a self-signed server certificate with
 *           either imap/ssl, imap/tls, pop3/ssl, or pop3/tls, you MUST add
 *           '/novalidate-cert' to the end of the protocol string. For imap,
 *           this would be 'imap/ssl/novalidate-cert' or
 *           'imap/tls/novalidate-cert', and for pop3 it would be
 *           'pop3/ssl/novalidate-cert' or 'pop3/tls/novalidate-cert'. This
 *           is necessary to tell c-client not to complain about the lack of
 *           a valid CA on the certificate.
 *
 * port: The port that the mail service/protocol you selected runs on.
 *       Default values:
 *         'pop3'    110
 *         'pop3s'   995
 *         'imap'    143
 *         'imaps'   993
 *
 *       ** The test script can help automatically determine the       **
 *       ** correct port value to use.  See the 'Testing MIMP' section **
 *       ** of imp/docs/INSTALL for instructions on how to access the  **
 *       ** test script.                                               **
 *
 * maildomain: What to put after the @ when sending mail. i.e. if you want
 *             all mail to look like 'From: user@example.com' set
 *             maildomain to 'example.com'. It is generally useful when
 *             the IMAP host is different from the mail receiving host. This
 *             will also be used to complete unqualified addresses when
 *             composing mail.
 *
 * smtphost: If specified, and $conf['mailer']['type'] is set to 'smtp',
 *           MIMP will use this host for outbound SMTP connections.  This
 *           value overrides any existing $conf['mailer']['params']['host']
 *           value at runtime.
 *
 * smtpport: If specified, and $conf['mailer']['type'] is set to 'smtp',
 *           MIMP will use this port for outbound SMTP connections.  This value
 *           overrides any existing $conf['mailer']['params']['port'] value at
 *           runtime.
 *
 * realm: ONLY USE REALM IF YOU ARE USING MIMP FOR HORDE AUTHENTICATION,
 *        AND YOU HAVE MULTIPLE SERVERS AND USERNAMES OVERLAP BETWEEN
 *        THOSE SERVERS. If you only have one server, or have multiple
 *        servers with no username clashes, or have full user@example.com
 *        usernames, you DO NOT need a realm setting. If you set one, an
 *        '@' symbol plus the realm will be appended to the username that
 *        users log in to MIMP with to create the username that Horde treats
 *        the user as. So with a realm of 'example.com', the username
 *        'jane' would be treated by Horde (NOT your IMAP server) as
 *        'jane@example.com', and the username 'jane@example.com' would be
 *        treated as 'jane@example.com@example.com' - an occasion where you
 *        probably don't need a realm setting.
 *
 * preferred: Only useful if you want to use the same servers.php file
 *            for different machines: if the hostname of the MIMP machine is
 *            identical to one of those in the preferred list, then the
 *            corresponding option in the select box will include SELECTED
 *            (i.e. it is selected per default). Otherwise the first entry
 *            in the list is selected.
 *
 *
 * *** The following options should NOT be set unless you REALLY know what ***
 * *** you are doing! FOR MOST PEOPLE, AUTO-DETECTION OF THESE PARAMETERS  ***
 * *** (the default if the parameters are not set) SHOULD BE USED!         ***
 *
 * namespace: The list of namespaces that exist on the server.  This entry
 *            must be an array. Example:
 *            'namespace' => array('#shared/', '#news/', '#ftp/', '#public/')
 *            This parameter must be set if using a TLS connection.
 *            Additionally, this parameter may be set if not using a TLS
 *            connection and you want to allow access to namespaces that may
 *            not be publicly advertised by the IMAP server (see RFC
 *            2342 [3]). These additional namespaces will be added to the list
 *            of available namespaces returned by the server.
 *
 * imap_config: Manually set IMAP server configuration information. Please see
 *              http://wiki.horde.org/ImpImapConfig for information on this
 *              parameter.  THIS PARAMETER IS NOT OFFICIALLY SUPPORTED BY THE
 *              HORDE PROJECT.  This entry must be an array with the following
 *              elements.
 *              'children' - (boolean) Whether the IMAP server supports the
 *                           CHILDREN command.
 *              'namespace' - (array) The namespace configuration of the
 *                            server.  See the return from
 *                            IMAP_Client::namespace() (located in
 *                            mimp/lib/IMAP/Client.php) for the structure of
 *                            this array.
 *
 * timeout: Manually set server timeouts. This option only works with PHP >=
 *          4.3.3. This entry must be an array with the following possible
 *          elements (if an element is missing, the default value is used):
 *          IMAP_OPENTIMEOUT - (integer) The timeout for open actions.
 *          IMAP_READTIMEOUT - (integer) The timeout for read actions.
 *          IMAP_WRITETIMEOUT - (integer) The timeout for write actions.
 *          IMAP_CLOSETIMEOUT - (integer) The timeout for close actions.
 */

/* Any entries whose key value ('foo' in $servers['foo']) begin with '_'
 * (an underscore character) will be treated as prompts, and you won't be
 * able to log in to them. The only property these entries need is 'name'.
 * This lets you put labels in the list, like this example: */
$servers['_prompt'] = array(
    'name' => _("Choose a mail server:")
);

/* Example configurations: */

$servers['imap'] = array(
    'name' => 'IMAP Server',
    'server' => 'imap.example.com',
    'protocol' => 'imap/notls',
    'port' => 143,
    'maildomain' => 'example.com',
    'smtphost' => 'smtp.example.com',
    'smtpport' => 25,
    'realm' => '',
    'preferred' => '',
);

$servers['cyrus'] = array(
    'name' => 'Cyrus IMAP Server',
    'server' => 'cyrus.example.com',
    'protocol' => 'imap/notls',
    'port' => 143,
    'maildomain' => 'example.com',
    'smtphost' => 'smtp.example.com',
    'smtpport' => 25,
    'realm' => '',
    'preferred' => '',
);

$servers['pop'] = array(
    'name' => 'POP3 Server',
    'server' => 'pop.example.com',
    'protocol' => 'pop3',
    'port' => 110,
    'maildomain' => 'example.com',
    'smtphost' => 'smtp.example.com',
    'smtpport' => 25,
    'realm' => '',
    'preferred' => '',
);

$servers['exchange'] = array(
    'name' => 'Exchange 5.5 server',
    'server' => 'exchange.example.com',
    'protocol' => 'imap',
    'port' => 143,
    'maildomain' => '',
    'smtphost' => 'smtp.example.com',
    'realm' => '',
    'preferred' => '',
);
